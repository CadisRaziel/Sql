SELECT, INSERT, UPDATE, DELETE (conectar, inserir, atualizar e deletar)
SELECIONE, INSIRA, ATUALIZE, EXCLUA
aprendemos tambem a utilizar o TRY e CATH para que ao sistema crashar ele aparece uma mensagem ou rodar um código alteranativo !


uma simples tabela feita em SQLCE com os seguintes comandos acima
Foi utilizado 1 textbox, 1 listbox, 4 botoes


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data.SqlServerCe;
using System.Windows.Forms;

namespace TesteBancoDados3
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btn_conectar_Click(object sender, EventArgs e)
        {
            //buscar os dados da tabela no database4
            try
            {
                //SqlCeConnection conectar = new SqlCeConnection();
                //conectar.ConnectionString = @"Data source = C:\source\repos\dados.sdf";
                //conectar.Open();

                // aqui eu vou definir uma pesquisa com o text box
                //como o nome do banco de dados é "dados" sempre que eu colocar dados no textbox ele vai apresentar o resutlado
                SqlCeConnection conectar = new SqlCeConnection();
                conectar.ConnectionString = @"Data source = C:\source\repos\" + test_bd.Text + ".sdf";
                conectar.Open();

                //buscar os dados
                DataTable dados = new DataTable();
                SqlCeDataAdapter operario = new SqlCeDataAdapter("SELECT * FROM pessoas", conectar);
                operario.Fill(dados); // aqui eu vou dizer que quero preencher a datatable

                //desconectar
                conectar.Close();   

                //apresentar os dados
                lista_dados.Items.Clear();
                foreach (DataRow linha in dados.Rows)
                {
                    lista_dados.Items.Add(linha["nome"].ToString() + " - " +
                                        linha["morada"].ToString() + " - " +
                                        linha["telefone"].ToString());

                }
            }

            catch
            {
                lista_dados.Items.Clear();
                MessageBox.Show("Ocorreu um erro");
            }

        }

        private void button1_Click(object sender, EventArgs e)
        {
            //adicionar um novo registro no banco de dados
            //nome, morada, telefone
            try
            {

                //abrir conexao
                SqlCeConnection conectar = new SqlCeConnection();
                conectar.ConnectionString = @"Data source = C:\source\repos\" + test_bd.Text + ".sdf";
                conectar.Open();


                //comando par adicionar novos registros no banco de dados
                string query = "INSERT INTO pessoas VALUES('Jason Momoa', 'Atlantis', '99999999')";
                SqlCeCommand operarior = new SqlCeCommand(query, conectar);
                operarior.ExecuteNonQuery();


                //fechar conexao
                conectar.Close();
            }
            catch
            {
                MessageBox.Show("Erro na inserção de dados");
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
           
            try
            {
                //atualizar dados no banco de dados
                SqlCeConnection conectar = new SqlCeConnection();
                conectar.ConnectionString = @"Data source = C:\source\repos\" + test_bd.Text + ".sdf";
                conectar.Open();

                //codigo para atualizar registro no banco de dados
                //string query = "UPDATE pessoas SET nome = 'Xavier'"; // a COLUNA 'nome' vai mudar toda para 'xavier' CUIDADO !!!
                string query = "UPDATE pessoas SET nome = 'Xavier' WHERE nome = 'Elon Musk'"; // aqui só o nome 'elon musk' vai ser atualizado para 'xavier'
                //primeiro voce coloca o nome que vai substituir depois coloca o nome que esta no banco de dados.
                SqlCeCommand operarior = new SqlCeCommand(query, conectar);
                operarior.ExecuteNonQuery();
                // para alterar a linha toda
                //string query = "UPDATE pessoas SET morada = 'Rua nova york', telefone = '9592885' WHERE  nome = 'Elon Musk'";



                //fechar conexao
                conectar.Close();
            }
            catch
            {
                MessageBox.Show("Erro na atualização dos dados");
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            try
            {
                //deletar registros do banco de dados
                SqlCeConnection conectar = new SqlCeConnection();
                conectar.ConnectionString = @"Data source = C:\source\repos\" + test_bd.Text + ".sdf";
                conectar.Open();

                //codigo para deletar os registro do banco de dados
                //string query = "DELETE * FROM pessoas"; = AQUI VAI DELETAR A TABELA TODA CUIDADO !!
                string query = "DELETE FROM pessoas WHERE nome = 'Xavier'"; //todas as linhas que conter Xavier vai ser apagada
                //OBSERVAÇÂO note que não tem "*" no DELETE,não deve colocar !!!!!! 
                SqlCeCommand operario = new SqlCeCommand(query, conectar);
                operario.ExecuteNonQuery();

                //deletando morada e telefone apaga toda a linha tambem cuidado!!
                //string query = "DELETE FROM pessoas WHERE morada = 'Atlantis'";
                //string query = "DELETR FROM pessoas WHERE telefone = '999999999'";
                //O NOME DEVE SER IGUAL !!!
                //posso fazer isso tambem
                //string query = "DELETE FROM pessoas WHERE nome = 'Valtin' AND morada = 'Rua Colombo'";
                //essa função é para nomes iguais mais endereços diferentes /\




                //fechar conexao
                conectar.Close();
            }
            catch
            {
                MessageBox.Show("erro ao deletar o registro");
            }
        }


    }


        // o try vai executar o código, caso der erro o c# vai encaminhar o código para o catch
        // então o catch vai fazer o código alternativo rodar
        // é muito utilizado para evitar erros
        // sempre usar !

        //try
        //{
        //}

        //catch 
        //{                
        //}


    

    

}





